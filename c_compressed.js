// Do not edit this file; automatically generated by build.py.
"use strict";

Blockly.cake=new Blockly.Generator("cake");Blockly.cake.C_VARIABLE_TYPES=[["float","float"],["int","int"],["unsigned int","unsigned int"],["short","short"],["unsigned short","unsigned short"],["bool","bool"]];Blockly.cake.C_GLOBAL_VARS=[];Blockly.cake.addReservedWords("Blockly,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,enum,export,extends,import,super,implements,interface,let,package,private,protected,public,static,yield,const,null,true,false,Array,ArrayBuffer,Boolean,Date,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Error,eval,EvalError,Float32Array,Float64Array,Function,Infinity,Int16Array,Int32Array,Int8Array,isFinite,isNaN,Iterator,JSON,Math,NaN,Number,Object,parseFloat,parseInt,RangeError,ReferenceError,RegExp,StopIteration,String,SyntaxError,TypeError,Uint16Array,Uint32Array,Uint8Array,Uint8ClampedArray,undefined,uneval,URIError,applicationCache,closed,Components,content,_content,controllers,crypto,defaultStatus,dialogArguments,directories,document,frameElement,frames,fullScreen,globalStorage,history,innerHeight,innerWidth,length,location,locationbar,localStorage,menubar,messageManager,mozAnimationStartTime,mozInnerScreenX,mozInnerScreenY,mozPaintCount,name,navigator,opener,outerHeight,outerWidth,pageXOffset,pageYOffset,parent,performance,personalbar,pkcs11,returnValue,screen,screenX,screenY,scrollbars,scrollMaxX,scrollMaxY,scrollX,scrollY,self,sessionStorage,sidebar,status,statusbar,toolbar,top,URL,window,addEventListener,alert,atob,back,blur,btoa,captureEvents,clearImmediate,clearInterval,clearTimeout,close,confirm,disableExternalCapture,dispatchEvent,dump,enableExternalCapture,escape,find,focus,forward,GeckoActiveXObject,getAttention,getAttentionWithCycleCount,getComputedStyle,getSelection,home,matchMedia,maximize,minimize,moveBy,moveTo,mozRequestAnimationFrame,open,openDialog,postMessage,print,prompt,QueryInterface,releaseEvents,removeEventListener,resizeBy,resizeTo,restore,routeEvent,scroll,scrollBy,scrollByLines,scrollByPages,scrollTo,setCursor,setImmediate,setInterval,setResizable,setTimeout,showModalDialog,sizeToContent,stop,unescape,updateCommands,XPCNativeWrapper,XPCSafeJSObjectWrapper,onabort,onbeforeunload,onblur,onchange,onclick,onclose,oncontextmenu,ondevicemotion,ondeviceorientation,ondragdrop,onerror,onfocus,onhashchange,onkeydown,onkeypress,onkeyup,onload,onmousedown,onmousemove,onmouseout,onmouseover,onmouseup,onmozbeforepaint,onpaint,onpopstate,onreset,onresize,onscroll,onselect,onsubmit,onunload,onpageshow,onpagehide,Image,Option,Worker,Event,Range,File,FileReader,Blob,BlobBuilder,Attr,CDATASection,CharacterData,Comment,console,DocumentFragment,DocumentType,DomConfiguration,DOMError,DOMErrorHandler,DOMException,DOMImplementation,DOMImplementationList,DOMImplementationRegistry,DOMImplementationSource,DOMLocator,DOMObject,DOMString,DOMStringList,DOMTimeStamp,DOMUserData,Entity,EntityReference,MediaQueryList,MediaQueryListListener,NameList,NamedNodeMap,Node,NodeFilter,NodeIterator,NodeList,Notation,Plugin,PluginArray,ProcessingInstruction,SharedWorker,Text,TimeRanges,Treewalker,TypeInfo,UserDataHandler,Worker,WorkerGlobalScope,HTMLDocument,HTMLElement,HTMLAnchorElement,HTMLAppletElement,HTMLAudioElement,HTMLAreaElement,HTMLBaseElement,HTMLBaseFontElement,HTMLBodyElement,HTMLBRElement,HTMLButtonElement,HTMLCanvasElement,HTMLDirectoryElement,HTMLDivElement,HTMLDListElement,HTMLEmbedElement,HTMLFieldSetElement,HTMLFontElement,HTMLFormElement,HTMLFrameElement,HTMLFrameSetElement,HTMLHeadElement,HTMLHeadingElement,HTMLHtmlElement,HTMLHRElement,HTMLIFrameElement,HTMLImageElement,HTMLInputElement,HTMLKeygenElement,HTMLLabelElement,HTMLLIElement,HTMLLinkElement,HTMLMapElement,HTMLMenuElement,HTMLMetaElement,HTMLModElement,HTMLObjectElement,HTMLOListElement,HTMLOptGroupElement,HTMLOptionElement,HTMLOutputElement,HTMLParagraphElement,HTMLParamElement,HTMLPreElement,HTMLQuoteElement,HTMLScriptElement,HTMLSelectElement,HTMLSourceElement,HTMLSpanElement,HTMLStyleElement,HTMLTableElement,HTMLTableCaptionElement,HTMLTableCellElement,HTMLTableDataCellElement,HTMLTableHeaderCellElement,HTMLTableColElement,HTMLTableRowElement,HTMLTableSectionElement,HTMLTextAreaElement,HTMLTimeElement,HTMLTitleElement,HTMLTrackElement,HTMLUListElement,HTMLUnknownElement,HTMLVideoElement,HTMLCanvasElement,CanvasRenderingContext2D,CanvasGradient,CanvasPattern,TextMetrics,ImageData,CanvasPixelArray,HTMLAudioElement,HTMLVideoElement,NotifyAudioAvailableEvent,HTMLCollection,HTMLAllCollection,HTMLFormControlsCollection,HTMLOptionsCollection,HTMLPropertiesCollection,DOMTokenList,DOMSettableTokenList,DOMStringMap,RadioNodeList,SVGDocument,SVGElement,SVGAElement,SVGAltGlyphElement,SVGAltGlyphDefElement,SVGAltGlyphItemElement,SVGAnimationElement,SVGAnimateElement,SVGAnimateColorElement,SVGAnimateMotionElement,SVGAnimateTransformElement,SVGSetElement,SVGCircleElement,SVGClipPathElement,SVGColorProfileElement,SVGCursorElement,SVGDefsElement,SVGDescElement,SVGEllipseElement,SVGFilterElement,SVGFilterPrimitiveStandardAttributes,SVGFEBlendElement,SVGFEColorMatrixElement,SVGFEComponentTransferElement,SVGFECompositeElement,SVGFEConvolveMatrixElement,SVGFEDiffuseLightingElement,SVGFEDisplacementMapElement,SVGFEDistantLightElement,SVGFEFloodElement,SVGFEGaussianBlurElement,SVGFEImageElement,SVGFEMergeElement,SVGFEMergeNodeElement,SVGFEMorphologyElement,SVGFEOffsetElement,SVGFEPointLightElement,SVGFESpecularLightingElement,SVGFESpotLightElement,SVGFETileElement,SVGFETurbulenceElement,SVGComponentTransferFunctionElement,SVGFEFuncRElement,SVGFEFuncGElement,SVGFEFuncBElement,SVGFEFuncAElement,SVGFontElement,SVGFontFaceElement,SVGFontFaceFormatElement,SVGFontFaceNameElement,SVGFontFaceSrcElement,SVGFontFaceUriElement,SVGForeignObjectElement,SVGGElement,SVGGlyphElement,SVGGlyphRefElement,SVGGradientElement,SVGLinearGradientElement,SVGRadialGradientElement,SVGHKernElement,SVGImageElement,SVGLineElement,SVGMarkerElement,SVGMaskElement,SVGMetadataElement,SVGMissingGlyphElement,SVGMPathElement,SVGPathElement,SVGPatternElement,SVGPolylineElement,SVGPolygonElement,SVGRectElement,SVGScriptElement,SVGStopElement,SVGStyleElement,SVGSVGElement,SVGSwitchElement,SVGSymbolElement,SVGTextElement,SVGTextPathElement,SVGTitleElement,SVGTRefElement,SVGTSpanElement,SVGUseElement,SVGViewElement,SVGVKernElement,SVGAngle,SVGColor,SVGICCColor,SVGElementInstance,SVGElementInstanceList,SVGLength,SVGLengthList,SVGMatrix,SVGNumber,SVGNumberList,SVGPaint,SVGPoint,SVGPointList,SVGPreserveAspectRatio,SVGRect,SVGStringList,SVGTransform,SVGTransformList,SVGAnimatedAngle,SVGAnimatedBoolean,SVGAnimatedEnumeration,SVGAnimatedInteger,SVGAnimatedLength,SVGAnimatedLengthList,SVGAnimatedNumber,SVGAnimatedNumberList,SVGAnimatedPreserveAspectRatio,SVGAnimatedRect,SVGAnimatedString,SVGAnimatedTransformList,SVGPathSegList,SVGPathSeg,SVGPathSegArcAbs,SVGPathSegArcRel,SVGPathSegClosePath,SVGPathSegCurvetoCubicAbs,SVGPathSegCurvetoCubicRel,SVGPathSegCurvetoCubicSmoothAbs,SVGPathSegCurvetoCubicSmoothRel,SVGPathSegCurvetoQuadraticAbs,SVGPathSegCurvetoQuadraticRel,SVGPathSegCurvetoQuadraticSmoothAbs,SVGPathSegCurvetoQuadraticSmoothRel,SVGPathSegLinetoAbs,SVGPathSegLinetoHorizontalAbs,SVGPathSegLinetoHorizontalRel,SVGPathSegLinetoRel,SVGPathSegLinetoVerticalAbs,SVGPathSegLinetoVerticalRel,SVGPathSegMovetoAbs,SVGPathSegMovetoRel,ElementTimeControl,TimeEvent,SVGAnimatedPathData,SVGAnimatedPoints,SVGColorProfileRule,SVGCSSRule,SVGExternalResourcesRequired,SVGFitToViewBox,SVGLangSpace,SVGLocatable,SVGRenderingIntent,SVGStylable,SVGTests,SVGTextContentElement,SVGTextPositioningElement,SVGTransformable,SVGUnitTypes,SVGURIReference,SVGViewSpec,SVGZoomAndPanalignas,alignof,and,and_eq,asm,auto,bitand,bitor,bool,break,case,catch,char,char16_t,char32_t,class,compl,const,constexpr,const_cast,continue,decltype,default,delete,do,double,dynamic_cast,else,enum,explicit,export,extern,false,float,for,friend,goto,if,inline,int,long,mutable,namespace,new,noexcept,not,not_eq,nullptr,operator,or,or_eq,private,protected,public,register,reinterpret_cast,return,short,signed,sizeof,static,static_assert,static_cast,struct,switch,template,this,thread_local,throw,true,try,typedef,typeid,typename,union,unsigned,using,virtual,void,volatile,wchar_t,while,xor,xor_eq,posix,game,api,PI,PI2,PI3,PI4,DEG2RAD,RAD2DEG,ZRMS,ZR2D,ZR3D,ALLIANCE");
Blockly.cake.ORDER_ATOMIC=0;Blockly.cake.ORDER_MEMBER=2;Blockly.cake.ORDER_FUNCTION_CALL=2;Blockly.cake.ORDER_INCREMENT=3;Blockly.cake.ORDER_DECREMENT=3;Blockly.cake.ORDER_LOGICAL_NOT=3;Blockly.cake.ORDER_BITWISE_NOT=3;Blockly.cake.ORDER_UNARY_PLUS=3;Blockly.cake.ORDER_UNARY_NEGATION=3;Blockly.cake.ORDER_MULTIPLICATION=5;Blockly.cake.ORDER_DIVISION=5;Blockly.cake.ORDER_MODULUS=5;Blockly.cake.ORDER_ADDITION=6;Blockly.cake.ORDER_SUBTRACTION=6;Blockly.cake.ORDER_BITWISE_SHIFT=7;
Blockly.cake.ORDER_RELATIONAL=8;Blockly.cake.ORDER_EQUALITY=9;Blockly.cake.ORDER_BITWISE_AND=10;Blockly.cake.ORDER_BITWISE_XOR=11;Blockly.cake.ORDER_BITWISE_OR=12;Blockly.cake.ORDER_LOGICAL_AND=13;Blockly.cake.ORDER_LOGICAL_OR=14;Blockly.cake.ORDER_CONDITIONAL=15;Blockly.cake.ORDER_ASSIGNMENT=15;Blockly.cake.ORDER_COMMA=17;Blockly.cake.ORDER_NONE=99;Blockly.cake.INFINITE_LOOP_TRAP=null;
Blockly.cake.init=function(){Blockly.cake.definitions_=Object.create(null);Blockly.cake.functionNames_=Object.create(null);if(Blockly.Variables){Blockly.cake.variableDB_?Blockly.cake.variableDB_.reset():Blockly.cake.variableDB_=new Blockly.Names(Blockly.cake.RESERVED_WORDS_);var a=[];Blockly.Variables.allVariables();for(var b=Blockly.cake.C_GLOBAL_VARS.values(),c=0;c<b.length;c++)a[c]=b[c].type+" "+Blockly.cake.variableDB_.getName(b[c].name,Blockly.Variables.NAME_TYPE)+("TRUE"===b[c].isArray?"["+
b[c].length+"]":"")+";";Blockly.cake.definitions_.variables=a.join("\n")}};Blockly.cake.finish=function(a){return a};Blockly.cake.finishFull=function(a){var b=[],c;for(c in Blockly.cake.definitions_)b.push(Blockly.cake.definitions_[c]);a=b.join("\n\n")+"\n\nvoid setPos(float x, float y, float z) {\n\tfloat pos[3];\n\tpos[0] = x; pos[1] = y; pos[2] = z;\n\tapi.setPositionTarget(pos);\n}\n\n"+a;-1===a.indexOf("//Begin page init\nvoid init() {\n")&&(a="void init() {}\n"+a);return a};
Blockly.cake.scrubNakedValue=function(a){return""};Blockly.cake.quote_=function(a){return a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/'/g,"\\'")};
Blockly.cake.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=this.prefixLines(d,"// ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=this.allNestedComments(d))&&(c+=this.prefixLines(d,"// "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=this.blockToCode(e);return c+b+e};
// Copyright 2012 Google Inc.  Apache License 2.0
Blockly.cake.colour={};Blockly.cake.colour_picker=function(a){return["'"+a.getFieldValue("COLOUR")+"'",Blockly.cake.ORDER_ATOMIC]};Blockly.cake.colour_random=function(a){return[Blockly.cake.provideFunction_("colour_random",["function "+Blockly.cake.FUNCTION_NAME_PLACEHOLDER_+"() {","  var num = Math.floor(Math.random() * Math.pow(2, 24));","  return '#' + ('00000' + num.toString(16)).substr(-6);","}"])+"()",Blockly.cake.ORDER_FUNCTION_CALL]};
Blockly.cake.colour_rgb=function(a){var b=Blockly.cake.valueToCode(a,"RED",Blockly.cake.ORDER_COMMA)||0,c=Blockly.cake.valueToCode(a,"GREEN",Blockly.cake.ORDER_COMMA)||0;a=Blockly.cake.valueToCode(a,"BLUE",Blockly.cake.ORDER_COMMA)||0;return[Blockly.cake.provideFunction_("colour_rgb",["function "+Blockly.cake.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b) {","  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;","  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;","  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;",
"  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);","  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);","  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);","  return '#' + r + g + b;","}"])+"("+b+", "+c+", "+a+")",Blockly.cake.ORDER_FUNCTION_CALL]};
Blockly.cake.colour_blend=function(a){var b=Blockly.cake.valueToCode(a,"COLOUR1",Blockly.cake.ORDER_COMMA)||"'#000000'",c=Blockly.cake.valueToCode(a,"COLOUR2",Blockly.cake.ORDER_COMMA)||"'#000000'";a=Blockly.cake.valueToCode(a,"RATIO",Blockly.cake.ORDER_COMMA)||.5;return[Blockly.cake.provideFunction_("colour_blend",["function "+Blockly.cake.FUNCTION_NAME_PLACEHOLDER_+"(c1, c2, ratio) {","  ratio = Math.max(Math.min(Number(ratio), 1), 0);","  var r1 = parseInt(c1.substring(1, 3), 16);","  var g1 = parseInt(c1.substring(3, 5), 16);",
"  var b1 = parseInt(c1.substring(5, 7), 16);","  var r2 = parseInt(c2.substring(1, 3), 16);","  var g2 = parseInt(c2.substring(3, 5), 16);","  var b2 = parseInt(c2.substring(5, 7), 16);","  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);","  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);","  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);","  r = ('0' + (r || 0).toString(16)).slice(-2);","  g = ('0' + (g || 0).toString(16)).slice(-2);","  b = ('0' + (b || 0).toString(16)).slice(-2);","  return '#' + r + g + b;",
"}"])+"("+b+", "+c+", "+a+")",Blockly.cake.ORDER_FUNCTION_CALL]};
// Copyright 2012 Google Inc.  Apache License 2.0
Blockly.cake.lists={};Blockly.cake.lists_create_empty=function(a){return["[]",Blockly.cake.ORDER_ATOMIC]};Blockly.cake.lists_create_with=function(a){for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++)b[c]=Blockly.cake.valueToCode(a,"ADD"+c,Blockly.cake.ORDER_COMMA)||"null";b="["+b.join(", ")+"]";return[b,Blockly.cake.ORDER_ATOMIC]};
Blockly.cake.lists_repeat=function(a){var b=Blockly.cake.provideFunction_("lists_repeat",["function "+Blockly.cake.FUNCTION_NAME_PLACEHOLDER_+"(value, n) {","  var array = [];","  for (var i = 0; i < n; i++) {","    array[i] = value;","  }","  return array;","}"]),c=Blockly.cake.valueToCode(a,"ITEM",Blockly.cake.ORDER_COMMA)||"null";a=Blockly.cake.valueToCode(a,"NUM",Blockly.cake.ORDER_COMMA)||"0";return[b+"("+c+", "+a+")",Blockly.cake.ORDER_FUNCTION_CALL]};
Blockly.cake.lists_length=function(a){return[(Blockly.cake.valueToCode(a,"VALUE",Blockly.cake.ORDER_FUNCTION_CALL)||"[]")+".length",Blockly.cake.ORDER_MEMBER]};Blockly.cake.lists_isEmpty=function(a){return["!"+(Blockly.cake.valueToCode(a,"VALUE",Blockly.cake.ORDER_MEMBER)||"[]")+".length",Blockly.cake.ORDER_LOGICAL_NOT]};
Blockly.cake.lists_indexOf=function(a){var b="FIRST"==a.getFieldValue("END")?"indexOf":"lastIndexOf",c=Blockly.cake.valueToCode(a,"FIND",Blockly.cake.ORDER_NONE)||"''";return[(Blockly.cake.valueToCode(a,"VALUE",Blockly.cake.ORDER_MEMBER)||"[]")+"."+b+"("+c+") + 1",Blockly.cake.ORDER_MEMBER]};
Blockly.cake.lists_getIndex=function(a){var b=a.getFieldValue("MODE")||"GET",c=a.getFieldValue("WHERE")||"FROM_START",d=Blockly.cake.valueToCode(a,"AT",Blockly.cake.ORDER_UNARY_NEGATION)||"1";a=Blockly.cake.valueToCode(a,"VALUE",Blockly.cake.ORDER_MEMBER)||"[]";if("FIRST"==c){if("GET"==b)return[a+"[0]",Blockly.cake.ORDER_MEMBER];if("GET_REMOVE"==b)return[a+".shift()",Blockly.cake.ORDER_MEMBER];if("REMOVE"==b)return a+".shift();\n"}else if("LAST"==c){if("GET"==b)return[a+".slice(-1)[0]",Blockly.cake.ORDER_MEMBER];
if("GET_REMOVE"==b)return[a+".pop()",Blockly.cake.ORDER_MEMBER];if("REMOVE"==b)return a+".pop();\n"}else if("FROM_START"==c){d=Blockly.isNumber(d)?parseFloat(d)-1:d+" - 1";if("GET"==b)return[a+"["+d+"]",Blockly.cake.ORDER_MEMBER];if("GET_REMOVE"==b)return[a+".splice("+d+", 1)[0]",Blockly.cake.ORDER_FUNCTION_CALL];if("REMOVE"==b)return a+".splice("+d+", 1);\n"}else if("FROM_END"==c){if("GET"==b)return[a+".slice(-"+d+")[0]",Blockly.cake.ORDER_FUNCTION_CALL];if("GET_REMOVE"==b||"REMOVE"==b){c=Blockly.cake.provideFunction_("lists_remove_from_end",
["function "+Blockly.cake.FUNCTION_NAME_PLACEHOLDER_+"(list, x) {","  x = list.length - x;","  return list.splice(x, 1)[0];","}"]);d=c+"("+a+", "+d+")";if("GET_REMOVE"==b)return[d,Blockly.cake.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+";\n"}}else if("RANDOM"==c){c=Blockly.cake.provideFunction_("lists_get_random_item",["function "+Blockly.cake.FUNCTION_NAME_PLACEHOLDER_+"(list, remove) {","  var x = Math.floor(Math.random() * list.length);","  if (remove) {","    return list.splice(x, 1)[0];","  } else {",
"    return list[x];","  }","}"]);d=c+"("+a+", "+("GET"!=b)+")";if("GET"==b||"GET_REMOVE"==b)return[d,Blockly.cake.ORDER_FUNCTION_CALL];if("REMOVE"==b)return d+";\n"}throw"Unhandled combination (lists_getIndex).";};
Blockly.cake.lists_setIndex=function(a){function b(){if(c.match(/^\w+$/))return"";var a=Blockly.cake.variableDB_.getDistinctName("tmp_list",Blockly.Variables.NAME_TYPE),b="var "+a+" = "+c+";\n";c=a;return b}var c=Blockly.cake.valueToCode(a,"LIST",Blockly.cake.ORDER_MEMBER)||"[]",d=a.getFieldValue("MODE")||"GET",e=a.getFieldValue("WHERE")||"FROM_START",f=Blockly.cake.valueToCode(a,"AT",Blockly.cake.ORDER_NONE)||"1";a=Blockly.cake.valueToCode(a,"TO",Blockly.cake.ORDER_ASSIGNMENT)||"null";if("FIRST"==
e){if("SET"==d)return c+"[0] = "+a+";\n";if("INSERT"==d)return c+".unshift("+a+");\n"}else if("LAST"==e){if("SET"==d)return e=b(),e+(c+"["+c+".length - 1] = "+a+";\n");if("INSERT"==d)return c+".push("+a+");\n"}else if("FROM_START"==e){f=Blockly.isNumber(f)?parseFloat(f)-1:f+" - 1";if("SET"==d)return c+"["+f+"] = "+a+";\n";if("INSERT"==d)return c+".splice("+f+", 0, "+a+");\n"}else if("FROM_END"==e){e=b();if("SET"==d)return e+=c+"["+c+".length - "+f+"] = "+a+";\n";if("INSERT"==d)return e+=c+".splice("+
c+".length - "+f+", 0, "+a+");\n"}else if("RANDOM"==e){e=b();f=Blockly.cake.variableDB_.getDistinctName("tmp_x",Blockly.Variables.NAME_TYPE);e+="var "+f+" = Math.floor(Math.random() * "+c+".length);\n";if("SET"==d)return e+=c+"["+f+"] = "+a+";\n";if("INSERT"==d)return e+=c+".splice("+f+", 0, "+a+");\n"}throw"Unhandled combination (lists_setIndex).";};
Blockly.cake.lists_getSublist=function(a){var b=Blockly.cake.valueToCode(a,"LIST",Blockly.cake.ORDER_MEMBER)||"[]",c=a.getFieldValue("WHERE1"),d=a.getFieldValue("WHERE2"),e=Blockly.cake.valueToCode(a,"AT1",Blockly.cake.ORDER_NONE)||"1";a=Blockly.cake.valueToCode(a,"AT2",Blockly.cake.ORDER_NONE)||"1";return["FIRST"==c&&"LAST"==d?b+".concat()":Blockly.cake.provideFunction_("lists_get_sublist",["function "+Blockly.cake.FUNCTION_NAME_PLACEHOLDER_+"(list, where1, at1, where2, at2) {","  function getAt(where, at) {",
"    if (where == 'FROM_START') {","      at--;","    } else if (where == 'FROM_END') {","      at = list.length - at;","    } else if (where == 'FIRST') {","      at = 0;","    } else if (where == 'LAST') {","      at = list.length - 1;","    } else {","      throw 'Unhandled option (lists_getSublist).';","    }","    return at;","  }","  at1 = getAt(where1, at1);","  at2 = getAt(where2, at2) + 1;","  return list.slice(at1, at2);","}"])+"("+b+", '"+c+"', "+e+", '"+d+"', "+a+")",Blockly.cake.ORDER_FUNCTION_CALL]};Blockly.cake.logic={};Blockly.cake.controls_if=function(a){for(var b=0,c=Blockly.cake.valueToCode(a,"IF"+b,Blockly.cake.ORDER_NONE)||"false",d=Blockly.cake.statementToCode(a,"DO"+b),e="if ("+c+") {\n"+d+"}",b=1;b<=a.elseifCount_;b++)c=Blockly.cake.valueToCode(a,"IF"+b,Blockly.cake.ORDER_NONE)||"false",d=Blockly.cake.statementToCode(a,"DO"+b),e+=" else if ("+c+") {\n"+d+"}";a.elseCount_&&(d=Blockly.cake.statementToCode(a,"ELSE"),e+=" else {\n"+d+"}");return e+"\n"};
Blockly.cake.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c="=="==b||"!="==b?Blockly.cake.ORDER_EQUALITY:Blockly.cake.ORDER_RELATIONAL,d=Blockly.cake.valueToCode(a,"A",c)||"0";a=Blockly.cake.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};
Blockly.cake.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"&&":"||",c="&&"==b?Blockly.cake.ORDER_LOGICAL_AND:Blockly.cake.ORDER_LOGICAL_OR,d=Blockly.cake.valueToCode(a,"A",c);a=Blockly.cake.valueToCode(a,"B",c);if(d||a){var e="&&"==b?"true":"false";d||(d=e);a||(a=e)}else a=d="false";return[d+" "+b+" "+a,c]};Blockly.cake.logic_negate=function(a){var b=Blockly.cake.ORDER_LOGICAL_NOT;return["!"+(Blockly.cake.valueToCode(a,"BOOL",b)||"true"),b]};
Blockly.cake.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"true":"false",Blockly.cake.ORDER_ATOMIC]};Blockly.cake.logic_ternary=function(a){var b=Blockly.cake.valueToCode(a,"IF",Blockly.cake.ORDER_CONDITIONAL)||"false",c=Blockly.cake.valueToCode(a,"THEN",Blockly.cake.ORDER_CONDITIONAL)||"null";a=Blockly.cake.valueToCode(a,"ELSE",Blockly.cake.ORDER_CONDITIONAL)||"null";return[b+" ? "+c+" : "+a,Blockly.cake.ORDER_CONDITIONAL]};Blockly.cake.loops={};Blockly.cake.controls_repeat_ext=function(a){var b=Blockly.cake.valueToCode(a,"TIMES",Blockly.cake.ORDER_ASSIGNMENT)||"0";a=Blockly.cake.statementToCode(a,"DO");var c="",d=Blockly.cake.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE),e=b;b.match(/^\w+$/)||Blockly.isNumber(b)||(e=Blockly.cake.variableDB_.getDistinctName("repeat_end",Blockly.Variables.NAME_TYPE),c+="int "+e+" = "+b+";\n");return c+("for (int "+d+" = 0; "+d+" < "+e+"; "+d+"++) {\n"+a+"}\n")};
Blockly.cake.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.cake.valueToCode(a,"BOOL",b?Blockly.cake.ORDER_LOGICAL_NOT:Blockly.cake.ORDER_NONE)||"false";a=Blockly.cake.statementToCode(a,"DO");b&&(c="!"+c);return"while ("+c+") {\n"+a+"}\n"};
Blockly.cake.controls_for=function(a){var b=Blockly.cake.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.cake.valueToCode(a,"FROM",Blockly.cake.ORDER_ASSIGNMENT)||"0",d=Blockly.cake.valueToCode(a,"TO",Blockly.cake.ORDER_ASSIGNMENT)||"0",e=Blockly.cake.valueToCode(a,"BY",Blockly.cake.ORDER_ASSIGNMENT)||"1";a=Blockly.cake.statementToCode(a,"DO");var f;if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&Blockly.isNumber(e)){var g=parseInt(c)<=parseInt(d);f="for (int "+b+" = "+
c+"; "+b+(g?" <= ":" >= ")+d+"; "+b;b=Math.abs(parseInt(e));f=(1==b?f+(g?"++":"--"):f+((g?" += ":" -= ")+b))+(") {\n"+a+"}\n")}else f="",g=c,c.match(/^\w+$/)||Blockly.isNumber(c)||(g=Blockly.cake.variableDB_.getDistinctName(b+"_start",Blockly.Variables.NAME_TYPE),f+="int "+g+" = "+c+";\n"),c=d,d.match(/^\w+$/)||Blockly.isNumber(d)||(c=Blockly.cake.variableDB_.getDistinctName(b+"_end",Blockly.Variables.NAME_TYPE),f+="int "+c+" = "+d+";\n"),d=Blockly.cake.variableDB_.getDistinctName(b+"_inc",Blockly.Variables.NAME_TYPE),
f+="int "+d+" = ",f=Blockly.isNumber(e)?f+(Math.abs(e)+";\n"):f+("fabsf("+e+");\n"),f+="if ("+g+" > "+c+") {\n",f+="  "+d+" = -"+d+";\n",f+="}\n",f+="for ("+b+" = "+g+";\n     "+d+" >= 0 ? "+b+" <= "+c+" : "+b+" >= "+c+";\n     "+b+" += "+d+") {\n"+a+"}\n";return f};
Blockly.cake.controls_forEach=function(a){var b=Blockly.cake.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.cake.valueToCode(a,"LIST",Blockly.cake.ORDER_ASSIGNMENT)||"[]",d=Blockly.cake.statementToCode(a,"DO");Blockly.cake.INFINITE_LOOP_TRAP&&(d=Blockly.cake.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+a.id+"'")+d);a=Blockly.cake.variableDB_.getDistinctName(b+"_index",Blockly.Variables.NAME_TYPE);return"for (var "+a+" in  "+c+") {\n"+("  "+b+" = "+c+"["+a+"];\n"+d)+"}\n"};
Blockly.cake.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break;\n";case "CONTINUE":return"continue;\n"}throw"Unknown flow statement.";};Blockly.cake.math={};Blockly.cake.math_number=function(a){a=a.getFieldValue("NUM");isNaN(parseFloat(a))&&(a="0");return[a,Blockly.cake.ORDER_ATOMIC]};
Blockly.cake.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.cake.ORDER_ADDITION],MINUS:[" - ",Blockly.cake.ORDER_SUBTRACTION],MULTIPLY:[" * ",Blockly.cake.ORDER_MULTIPLICATION],DIVIDE:[" / ",Blockly.cake.ORDER_DIVISION],POWER:[null,Blockly.cake.ORDER_COMMA]}[a.getFieldValue("OP")],c=b[0],b=b[1],d=Blockly.cake.valueToCode(a,"A",b)||"0";a=Blockly.cake.valueToCode(a,"B",b)||"0";return c?[d+c+a,b]:["powf("+d+", "+a+")",Blockly.cake.ORDER_FUNCTION_CALL]};
Blockly.cake.math_single=function(a){var b=a.getFieldValue("OP");if("-"==b)return a=Blockly.cake.valueToCode(a,"NUM",Blockly.cake.ORDER_UNARY_NEGATION)||"0","-"==a[0]&&(a=" "+a),["-"+a,Blockly.cake.ORDER_UNARY_NEGATION];a=Blockly.cake.valueToCode(a,"NUM",Blockly.cake.ORDER_NONE)||"0";return[b+"("+a+")",Blockly.cake.ORDER_FUNCTION_CALL]};Blockly.cake.math_constant=function(a){return[a.getFieldValue("CONSTANT"),Blockly.cake.ORDER_ATOMIC]};
Blockly.cake.math_change=function(a){var b=Blockly.cake.valueToCode(a,"DELTA",Blockly.cake.ORDER_ADDITION)||"0";return(Blockly.cake.valueToCode(a,"VAR",Blockly.cake.ORDER_ADDITION)||"0")+" += "+b+";\n"};Blockly.cake.math_round=Blockly.cake.math_single;Blockly.cake.math_trig=Blockly.cake.math_single;
Blockly.cake.math_modulo=function(a){var b=Blockly.cake.valueToCode(a,"DIVIDEND",Blockly.cake.ORDER_MODULUS)||"0";a=Blockly.cake.valueToCode(a,"DIVISOR",Blockly.cake.ORDER_MODULUS)||"0";return[b+" % "+a,Blockly.cake.ORDER_MODULUS]};Blockly.cake.procedures={};Blockly.cake.procedures_defreturn=function(a){var b=Blockly.cake.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=Blockly.cake.statementToCode(a,"STACK"),d=a.getFieldValue("TYPE")||"void",e=Blockly.cake.valueToCode(a,"RETURN",Blockly.cake.ORDER_NONE)||"";e&&(e="  return "+e+";\n");b=d+" "+b+a.getArgString(!0)+" {\n"+c+e+"}";return b=Blockly.cake.scrub_(a,b)};Blockly.cake.procedures_defnoreturn=Blockly.cake.procedures_defreturn;
Blockly.cake.procedures_definit=function(a){var b="void init() {\n"+(Blockly.cake.statementToCode(a,"GLOBALS")+Blockly.cake.statementToCode(a,"STACK"))+"}";return b=Blockly.cake.scrub_(a,b)};Blockly.cake.procedures_defloop=function(a){var b="void loop() {\n"+Blockly.cake.statementToCode(a,"STACK")+"}";return b=Blockly.cake.scrub_(a,b)};
Blockly.cake.procedures_callreturn=function(a){for(var b=Blockly.cake.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.cake.valueToCode(a,"ARG"+d,Blockly.cake.ORDER_COMMA)||"null";return[b+"("+c.join(", ")+")",Blockly.cake.ORDER_FUNCTION_CALL]};
Blockly.cake.procedures_callnoreturn=function(a){for(var b=Blockly.cake.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.cake.valueToCode(a,"ARG"+d,Blockly.cake.ORDER_COMMA)||"null";return b+"("+c.join(", ")+");\n"};
Blockly.cake.procedures_ifreturn=function(a){var b="if ("+(Blockly.cake.valueToCode(a,"CONDITION",Blockly.cake.ORDER_NONE)||"false")+") {\n";a.hasReturnValue_?(a=Blockly.cake.valueToCode(a,"VALUE",Blockly.cake.ORDER_NONE)||"null",b+="  return "+a+";\n"):b+="  return;\n";return b+"}\n"};Blockly.cake.text={};Blockly.cake.debug_string=function(a){return[Blockly.cake.quote_(a.getFieldValue("TEXT")),Blockly.cake.ORDER_ATOMIC]};Blockly.cake.debug=function(a){return"DEBUG(( "+(Blockly.cake.valueToCode(a,"TEXT",Blockly.cake.ORDER_NONE)||'""')+" ));\n"};Blockly.cake.variables={};Blockly.cake.variables_get=function(a){return[Blockly.cake.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.cake.ORDER_ATOMIC]};Blockly.cake.variables_array_get_pointer=function(a){return[Blockly.cake.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.cake.ORDER_ATOMIC]};
Blockly.cake.variables_set=function(a){var b=Blockly.cake.valueToCode(a,"VALUE",Blockly.cake.ORDER_ASSIGNMENT)||"0";return Blockly.cake.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+b+";\n"};Blockly.cake.variables_declare=function(a){var b=Blockly.cake.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Variables.NAME_TYPE);a=a.getFieldValue("VALUE")||"0";return b+" = "+a+";\n"};
Blockly.cake.variables_array_get=function(a){var b=Blockly.cake.valueToCode(a,"INDEX",Blockly.cake.ORDER_NONE)||"0";return[(Blockly.cake.variableDB_.getName(a.getFieldValue("ARRAY"),Blockly.Variables.NAME_TYPE)||"_")+"["+b+"]",Blockly.cake.ORDER_MEMBER]};
Blockly.cake.variables_array_set=function(a){var b=Blockly.cake.valueToCode(a,"INDEX",Blockly.cake.ORDER_NONE)||"0",c=Blockly.cake.variableDB_.getName(a.getFieldValue("ARRAY"),Blockly.Variables.NAME_TYPE)||"_";a=Blockly.cake.valueToCode(a,"VALUE",Blockly.cake.ORDER_ASSIGNMENT)||"0";return c+"["+b+"] = "+a+";\n"};
Blockly.cake.variables_array_declare=function(a){for(var b=Blockly.cake.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Variables.NAME_TYPE),c=a.getFieldValue("LENGTH"),d="",e=0;e<c;e++)var f=a.getFieldValue("VALUE"+e)||"0",d=d+b+"["+e+"] = "+f+";\n";return d};